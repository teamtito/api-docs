# Errors


```json
{
  "status": 422,
  "message": "A readable message that describes the problem"
}
```

If you get an error then it will follow a common format. Every error includes a `status` and a `message`.

## Attributes <%= icon_for :attributes %>

<%= list_attributes({
  access_token: {
    description: "The last four characters of the access token used. Included if you get a 404 error.",
    type: "string"
  },
  errors: {
    description: "A hash of each attribute and an array of messages for that attribute.",
    type: "object"
  },
  error_list: {
    description: "Similar to `errors` but in an array.",
    type: "object array"
  },
  hint: {
    description: "Guidance on what to do to solve this problem.",
    type: "string"
  },
  identifier: {
    description: "If we have logged this error then this unique identifier will help us find it in our logs.",
    type: "string"
  },
  test_mode: {
    description: "Whether test mode is one of off.",
    type: "boolean",
    since: "3.1.0"
  },
  message: {
    description: "Describes the problem.",
    type: "string"
  },
  status: {
    description: "The HTTP status code. See <a href=\"#errors-http-status-codes\">below</a>.",
    type: "integer"
  },
}, context: :errors) %>

## Authentication errors [401] <i class="fa-regular fa-lock-keyhole"></i>

<%= display_response "401", resource: :errors %>

If a request cannot be authenticated the Tito API returns the standard
`401` unauthorized HTTP status code and includes more details of the
authentication error in the HTTP response.

The Tito API includes a machine readable `errors` key. It also has a `hint` key
containing human friendly information on how to resolve your authentication error.

## Authorization errors [403] <i class="fa-regular fa-ban"></i>

<%= display_response "403", resource: :errors %>

If a request cannot be authorized as a user has insufficient permissions
the Tito API returns a `403` forbidden HTTP status code and includes more details of the
authorization error in the HTTP response.

## Resource not found [404] <i class="fa-regular fa-notdef"></i>

<%= display_response "404", resource: :errors %>

If the resource you are looking for isn't there.

## Validation errors [422] <i class="fa-regular fa-thumbs-down"></i>

<%= display_response "422", resource: :errors %>

For example, if a resource requires the `title` attribute to be present there
will be an `errors` key in the response with subkey of `title` containing an array
of errors.

The errors are repeated in an array called `error_list` which you might find easier.

## HTTP status codes <i class="fa-regular fa-network-wired"></i>

Code | Meaning
---- | -------
`200` OK | All is well.
`201` Created | Your request has been fulfilled and has resulted in one or more new resources being created.
`204` No Content | Your request has been fulfilled and that there is no additional content to send in the response payload body. e.g. deleting a resource.
`401` Unauthorized | Your request is not authenticated. See the [Authentication Errors](#errors-authentication-errors) section for more information.
`403` Forbidden | Your request is not authorized as the user has insufficient permissions. See the [Authorization Errors](#errors-authorization-errors) section for more information.
`404` Page Not Found | The endpoint requested does not exist.
`422` Unprocessable Entity | The resource couldn't be created or updated due to a validation error. Please see the response body for more information.
`429` Too Many Requests | Your application is exceeding its rate limit. Slow down, pal!
`500` Internal Server Error | Something is wrong on our end.
`504` Gateway Timeout | Something has timed out on our end.
